.tasks.show-page
  .display-4.mt-3.mb-3
    = "Tarea"
    %span.small= "[#{@task.code}]"
  %h2 Información
  .card
    .card-body
      .table-responsive
        %table.table.table-striped.table-borderless
          %thead
            %tr
              %th Código
              %th Nombre
              %th Categoría
              %th Creador
              %th Estado
              %th
          %tbody
            %tr
              %td= @task.code || '213r'
              %td= @task.name
              %td= @task.category.name
              %td= @task.owner.email
              %td.task-status= @task.status
              %th
                .dropdown
                  %a#taskMenu{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown"}
                    .fas.fa-ellipsis-v
                  .dropdown-menu{"aria-labelledby" => "taskMenu"}
                    - available_events_for(@task).each do |event|
                      = link_to event, trigger_task_path(@task, event: event, format: :js), remote: true, method: :patch, class: 'dropdown-item'
        %table.table.table-striped.table-borderless
          %thead
            %tr
              %th Descripción
          %tbody
            %tr
              %td.font-weight-light= @task.description
      .task-participants
        .task-participants-header
          .font-weight-bold.text-uppercase= 'Participantes'
        - @task.participating_users.includes(:user).each do |participant|
          .task-participant{ class: "task-participant--#{participant.role}" }
            = image_tag "https://robohash.org/#{participant.user.email}?size=60x60", title: participant.user.email
      = link_to t('common.edit'), edit_task_path(@task)
      \|
      = link_to t('common.back'), tasks_path
  %h2.mt-2.mb-2 Notas
  .notes-container
    .card
      .card-body
        - if @task.notes.exists?
          .notes
            - @task.notes.order(created_at: :asc).each do |note|
              .note-element
                = render 'tasks/notes/note', note: note
        - else
          .notes
        = simple_form_for Note.new, url: task_notes_path(task_id: @task.id), remote: true do |f|
          = f.input :body, label: false, placeholder: 'Escriba una nota', as: :string, input_html: { autocomplete: :off }
